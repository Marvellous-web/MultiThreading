package org.example;

import java.util.concurrent.*;

//
//üî∑ 1. Runnable vs Callable ‚Äì Basic Difference
//Feature	Runnable	Callable<V>
//Return value	‚ùå No return value	‚úÖ Can return a result
//Exception handling	‚ùå Can't throw checked exceptions	‚úÖ Can throw checked exceptions
//Method	run()	call()
public class CallableAndFuture {
    public static void main(String[] args) throws Exception {
        ExecutorService executor = Executors.newSingleThreadExecutor(); // 1 thread

        Callable<String> task = () -> {
            Thread.sleep(2000); // 2 seconds ‡§∞‡•Å‡§ï‡•ã
            return "üéØ Result aaya!";
        };

        Future<String> future = executor.submit(task); // ‡§ï‡§æ‡§Æ ‡§ö‡§≤‡§æ ‡§¶‡§ø‡§Ø‡§æ

        System.out.println("Task submitted... result ka wait...");

        String result = future.get(); // ‡§Ø‡§π‡•Ä‡§Ç ‡§∞‡•Å‡§ï ‡§ú‡§æ‡§è‡§ó‡§æ ‡§ú‡§¨ ‡§§‡§ï ‡§ï‡§æ‡§Æ complete ‡§®‡§π‡•Ä‡§Ç ‡§π‡•ã‡§§‡§æ

        System.out.println("Result: " + result);

        executor.shutdown();
    }
}
